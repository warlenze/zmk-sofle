//
// Copyright (c) 2024 The ZMK Contributors
//
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#

#define BASE 0
#define NUM 1
#define NAV 2
#define MOUS 3
#define SYM 4
#define RGB 5
#define GAME 6
#define FUN 7

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        rgb_layer_2 {
            if-layers = <2 3>;
            then-layer = <7>;
        };

        sym_layer_2 {
            if-layers = <1 4>;
            then-layer = <6>;
        };
    };

    macros {
        set_game_layer: set_game_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 5 &rgb_ug RGB_COLOR_HSB(310,100,20)>;
            label = "SET_GAME_LAYER";
        };

        set_base_layer: set_base_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &rgb_ug RGB_COLOR_HSB(210,100,20)>;
            label = "SET_BASE_LAYER";
        };
    };

    combos {
        compatible = "zmk,combos";

        sym_tog {
            bindings = <&tog 6>;
            key-positions = <52 57>;
            layers = <0 6>;
            timeout-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "base";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                   &kp N6           &kp N7     &kp N8     &kp N9            &kp N0                  &set_game_layer
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T                                    &kp Y            &kp U      &kp I      &kp O             &kp P                   &kp CAPS
&kp LSHFT  &kp A   &kp S     &kp D     &kp F      &kp G                                    &kp H            &kp J      &kp K      &kp L             &mt DOUBLE_QUOTES APOS  &kp RIGHT_SHIFT
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V      &kp B        &kp C_MUTE     &kp C_PLAY   &kp N            &kp M      &kp COMMA  &kp DOT           &mt COLON SEMI          &kp RIGHT_CONTROL
                   &kp LGUI  &kp LALT  &kp SPACE  &lt 1 SPACE  &lt 2 ENTER    &lt 3 ENTER  &lt 4 BACKSPACE  &kp RIGHT  &kp RIGHT  &kp LEFT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        num_layer {
            display-name = "num";
            bindings = <
&none          &none      &none    &kp DEL  &none   &kp BACKSPACE                    &none     &none   &kp FSLH  &kp STAR  &kp MINUS  &none
&kp BACKSPACE  &kp PLUS   &kp N7   &kp N8   &kp N9  &kp FSLH                         &kp FSLH  &kp N7  &kp N8    &kp N9    &kp PLUS   &none
&kp LSHFT      &kp MINUS  &kp N4   &kp N5   &kp N6  &kp STAR                         &kp STAR  &kp N4  &kp N5    &kp N6    &kp MINUS  &none
&kp LCTRL      &kp DOT    &kp N1   &kp N2   &kp N3  &kp DOT        &trans    &trans  &kp DOT   &kp N1  &kp N2    &kp N3    &kp DOT    &kp C_AL_CALC
                          &kp DOT  &kp N0   &kp N0  &trans         &trans    &trans  &trans    &kp N0  &kp N0    &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        fun_layer {
            display-name = "fun";
            bindings = <
&bootloader      &kp F1     &kp F2        &kp F3            &kp F4          &kp F5                             &kp F6   &kp F7     &kp F8        &kp F9    &kp F10  &kp F11
&kp PRINTSCREEN  &kp LC(Y)  &kp F10       &kp F11           &kp F12         &kp F9                             &kp DOT  &kp DOT    &kp DOT       &kp DOT   &kp DOT  &kp F12
&kp RET          &kp LC(A)  &sk LEFT_ALT  &sk LEFT_CONTROL  &sk LEFT_SHIFT  &kp F5                             &kp DOT  &sk LSHFT  &sk LCTRL     &sk LALT  &kp DOT  &kp LSHFT
&kp LCTRL        &kp LC(Z)  &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp PRINTSCREEN  &trans    &trans  &kp DOT  &kp DOT    &kp DOT       &kp DOT   &kp DOT  &kp LCTRL
                            &none         &kp LALT          &none           &trans           &trans    &trans  &trans   &kp DOT    &kp LEFT_ALT  &kp DOT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        mouse_layer {
            display-name = "mouse";
            bindings = <
&none   &none      &none      &none      &none      &none                        &none           &none           &none           &none            &none          &bootloader
&none   &kp ESC    &mkp RCLK  &mkp LCLK  &mkp MCLK  &kp FSLH                     &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &kp ESC        &none
&trans  &kp LC(Y)  &kp LALT   &kp LCTRL  &kp LSHFT  &kp STAR                     &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp BACKSPACE  &none
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)  &trans    &trans  &none           &mkp LCLK       &mkp RCLK       &mkp MCLK        &kp DELETE     &none
                   &none      &trans     &none      &trans     &trans    &trans  &trans          &none           &none           &none
            >;
        };

        nav_layer {
            display-name = "nav";
            bindings = <
&kp ESC  &none      &none         &none      &none      &none                        &trans     &trans         &trans      &trans     &trans         &trans
&trans   &kp ESC    &kp ASTERISK  &kp SLASH  &none      &kp FSLH                     &kp PG_UP  &kp HOME       &kp UP      &kp END    &kp ESC        &trans
&trans   &kp LC(Y)  &kp LALT      &kp LCTRL  &kp LSHFT  &kp STAR                     &kp PG_DN  &kp LEFT       &kp DOWN    &kp RIGHT  &kp BACKSPACE  &trans
&trans   &kp LC(Z)  &kp LC(X)     &kp LC(C)  &kp LC(V)  &kp LC(Y)  &trans    &trans  &none      &kp BACKSPACE  &kp DELETE  &none      &kp DELETE     &trans
                    &trans        &trans     &none      &trans     &trans    &trans  &trans     &none          &trans      &trans
            >;
        };

        game_layer {
            display-name = "game";
            bindings = <
&kp ESC  &kp N5     &kp N1    &kp N2    &kp N3     &kp N4                                   &kp N6           &kp N7         &kp N8            &kp N9      &kp N0          &set_base_layer
&kp T    &kp TAB    &kp Q     &kp W     &kp E      &kp R                                    &kp Y            &kp U          &kp I             &kp O       &kp P           &kp CAPS
&kp G    &kp LSHFT  &kp A     &kp S     &kp D      &kp F                                    &kp H            &kp J          &kp K             &kp L       &kp APOSTROPHE  &kp RIGHT_SHIFT
&kp B    &kp LCTRL  &kp Z     &kp X     &kp C      &kp V        &kp C_MUTE     &kp C_PLAY   &kp N            &kp M          &kp COMMA         &kp DOT     &kp SEMICOLON   &kp RIGHT_CONTROL
                    &kp LGUI  &kp LALT  &kp SPACE  &lt 1 SPACE  &lt 2 ENTER    &lt 3 ENTER  &lt 4 BACKSPACE  &kp BACKSPACE  &kp LEFT_CONTROL  &caps_word
            >;
        };

        sym_layer {
            display-name = "sym";
            bindings = <
&none   &none          &none          &none             &none          &none                        &none       &none          &none                  &none                 &none              &none
&none   &kp PLUS       &kp LESS_THAN  &kp GREATER_THAN  &kp PIPE       &kp FSLH                     &kp HASH    &kp PERCENT    &kp RIGHT_BRACE        &kp LEFT_BRACE        &kp DOLLAR         &none
&trans  &kp MINUS      &kp QUESTION   &kp EXCL          &kp EQUAL      &kp STAR                     &kp AT      &kp SEMICOLON  &kp RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp BACKSPACE
&trans  &kp BACKSLASH  &kp CARET      &kp PERCENT       &kp AMPERSAND  &kp TILDE  &trans    &trans  &kp DOLLAR  &kp UNDER      &kp RIGHT_BRACKET      &kp LEFT_BRACKET      &kp COLON          &none
                       &none          &trans            &none          &trans     &trans    &trans  &trans      &none          &none                  &none
            >;
        };

        rgb_layer {
            display-name = "rgb";
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                       &to 9   &to 8  &none  &none  &none  &none
&none           &none         &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF                    &none   &none  &none  &none  &none  &none
&none           &none         &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI                    &none   &none  &none  &none  &none  &none
&studio_unlock  &none         &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &none            &none            &trans    &trans  &none   &none  &none  &none  &none  &none
                              &none            &none            &none            &trans           &trans    &trans  &trans  &none  &none  &none
            >;
        };

        engrammer {
            display-name = "engrammer";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                   &kp N6           &kp N7     &kp N8     &kp N9            &kp N0  &to 0
&kp TAB    &kp B   &kp Y     &kp O     &kp U      &kp SQT                                  &kp SEMI         &kp L      &kp D      &kp W             &kp V   &kp Z
&kp B      &kp C   &kp I     &kp E     &kp A      &kp COMMA                                &kp DOT          &kp H      &kp T      &kp N             &kp S   &kp Q
&kp LCTRL  &kp G   &kp X     &kp J     &kp K      &kp MINUS    &kp C_MUTE     &kp C_PLAY   &kp FSLH         &kp R      &kp M      &kp F             &kp P   &kp RIGHT_CONTROL
                   &kp LGUI  &kp LALT  &kp SPACE  &lt 1 SPACE  &lt 2 ENTER    &lt 3 ENTER  &lt 4 BACKSPACE  &kp RIGHT  &kp RIGHT  &kp LEFT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;

            label = "eng";
        };

        qwerty {
            display-name = "qwerty";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                   &kp N6           &kp N7     &kp N8     &kp N9            &kp N0    &to 0
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T                                    &kp Y            &kp U      &kp I      &kp O             &kp P     &kp CAPS
&kp LSHFT  &kp A   &kp S     &kp D     &kp F      &kp G                                    &kp H            &kp J      &kp K      &kp L             &kp SEMI  &kp APOS
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V      &kp B        &kp C_MUTE     &kp C_PLAY   &kp N            &kp M      &kp COMMA  &kp DOT           &kp FSLH  &kp RIGHT_CONTROL
                   &kp LGUI  &kp LALT  &kp SPACE  &lt 1 SPACE  &lt 2 ENTER    &lt 3 ENTER  &lt 4 BACKSPACE  &kp RIGHT  &kp RIGHT  &kp LEFT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;

            label = "qwerty";
        };
    };
};
