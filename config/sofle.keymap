//
// Copyright (c) 2024 The ZMK Contributors
//
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#

#define BASE 0
#define NUM 1
#define NAV 2
#define MOUS 3
#define SYM 4
#define RGB 5
#define GAME 6

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        sym_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };

        rgb_layer {
            if-layers = <7 3>;
            then-layer = <5>;
        };
    };

    macros {
        set_game_layer: set_game_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 6 &rgb_ug RGB_COLOR_HSB(310,100,20)>;
            label = "SET_GAME_LAYER";
        };

        set_base_layer: set_base_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &rgb_ug RGB_COLOR_HSB(210,100,20)>;
            label = "SET_BASE_LAYER";
        };
    };

    combos {
        compatible = "zmk,combos";

        boot_left {
            bindings = <&bootloader>;
            key-positions = <0 5>;
        };

        boot_right {
            bindings = <&bootloader>;
            key-positions = <6 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "base";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                   &kp N6           &kp N7         &kp N8            &kp N9      &kp N0          &set_game_layer
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T                                    &kp Y            &kp U          &kp I             &kp O       &kp P           &kp CAPS
&kp LSHFT  &kp A   &kp S     &kp D     &kp F      &kp G                                    &kp H            &kp J          &kp K             &kp L       &kp APOSTROPHE  &kp RIGHT_SHIFT
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V      &kp B        &kp C_MUTE     &kp C_PLAY   &kp N            &kp M          &kp COMMA         &kp DOT     &kp SEMI        &kp RIGHT_CONTROL
                   &kp LGUI  &kp LALT  &kp SPACE  &lt 1 SPACE  &lt 7 ENTER    &lt 3 ENTER  &lt 2 BACKSPACE  &kp BACKSPACE  &kp LEFT_CONTROL  &caps_word
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        num_layer {
            display-name = "num";
            bindings = <
&none          &none      &none   &none     &none   &kp BACKSPACE                    &none     &none          &none   &none    &none      &none
&kp BACKSPACE  &kp MINUS  &kp N7  &kp N8    &kp N9  &kp FSLH                         &kp FSLH  &kp N7         &kp N8  &kp N9   &kp MINUS  &none
&kp LSHFT      &kp PLUS   &kp N4  &kp N5    &kp N6  &kp STAR                         &kp STAR  &kp N4         &kp N5  &kp N6   &kp PLUS   &none
&kp LCTRL      &kp N0     &kp N1  &kp N2    &kp N3  &kp DOT        &trans    &trans  &kp DOT   &kp N1         &kp N2  &kp N3   &kp N0     &kp C_AL_CALC
                          &none   &kp LALT  &none   &trans         &trans    &trans  &trans    &kp BACKSPACE  &kp N0  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            display-name = "nav";
            bindings = <
&kp ESC  &none      &none         &none      &none      &none                        &trans     &trans         &trans      &trans     &trans         &trans
&trans   &kp HASH   &kp ASTERISK  &kp SLASH  &none      &none                        &kp PG_UP  &kp HOME       &kp UP      &kp END    &none          &trans
&trans   &kp LC(Y)  &kp LALT      &kp LCTRL  &kp LSHFT  &none                        &kp PG_DN  &kp LEFT       &kp DOWN    &kp RIGHT  &kp BACKSPACE  &trans
&trans   &kp LC(Z)  &kp LC(X)     &kp LC(C)  &kp LC(V)  &kp LC(Y)  &trans    &trans  &none      &kp BACKSPACE  &kp DELETE  &none      &kp DELETE     &trans
                    &trans        &trans     &none      &trans     &trans    &trans  &trans     &none          &trans      &trans
            >;
        };

        mouse_layer {
            display-name = "mouse";
            bindings = <
&none   &none      &none      &none      &none      &none                           &none           &none           &none           &none            &none          &none
&none   &none      &none      &none      &none      &none                           &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none          &none
&trans  &kp LC(Y)  &kp LALT   &kp LCTRL  &kp LSHFT  &none                           &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp BACKSPACE  &none
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)  &trans       &trans  &none           &mkp LCLK       &mkp RCLK       &mkp MCLK        &kp DELETE     &none
                   &none      &trans     &mkp MCLK  &mkp LCLK  &mkp RCLK    &none   &none           &none           &none           &none
            >;
        };

        sym_layer {
            display-name = "sym";
            bindings = <
&none   &none            &none          &none             &none          &none                          &none       &none              &none                  &none                 &none              &none
&none   &kp HASH         &kp ASTERISK   &kp SLASH         &kp PIPE       &kp CARET                      &kp DOLLAR  &kp DOUBLE_QUOTES  &kp RIGHT_BRACE        &kp LEFT_BRACE        &kp DOUBLE_QUOTES  &none
&trans  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL      &kp PERCENT                    &kp HASH    &kp AT             &kp RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp QUESTION       &none
&trans  &kp BACKSLASH    &kp LESS_THAN  &kp GREATER_THAN  &kp AMPERSAND  &kp TILDE    &trans    &trans  &kp AT      &kp UNDER          &kp RIGHT_BRACKET      &kp LEFT_BRACKET      &kp COLON          &none
                         &none          &trans            &none          &trans       &trans    &trans  &trans      &none              &none                  &none
            >;
        };

        rgb_layer {
            display-name = "rgb";
            bindings = <
&none           &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                       &none   &none  &none  &none  &none  &none
&none           &bt BT_CLR    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF                    &none   &none  &none  &none  &none  &none
&none           &none         &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI                    &none   &none  &none  &none  &none  &none
&studio_unlock  &none         &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &none            &none            &trans    &trans  &none   &none  &none  &none  &none  &none
                              &none            &none            &none            &trans           &trans    &trans  &trans  &none  &none  &none
            >;
        };

        game_layer {
            display-name = "game";
            bindings = <
&kp ESC  &kp N5     &kp N1    &kp N2    &kp N3     &kp N4                                   &kp N6           &kp N7         &kp N8            &kp N9      &kp N0          &set_base_layer
&kp T    &kp TAB    &kp Q     &kp W     &kp E      &kp R                                    &kp Y            &kp U          &kp I             &kp O       &kp P           &kp CAPS
&kp G    &kp LSHFT  &kp A     &kp S     &kp D      &kp F                                    &kp H            &kp J          &kp K             &kp L       &kp APOSTROPHE  &kp RIGHT_SHIFT
&kp B    &kp LCTRL  &kp Z     &kp X     &kp C      &kp V        &kp C_MUTE     &kp C_PLAY   &kp N            &kp M          &kp COMMA         &kp DOT     &kp SEMICOLON   &kp RIGHT_CONTROL
                    &kp LGUI  &kp LALT  &kp SPACE  &lt 1 SPACE  &lt 7 ENTER    &lt 3 ENTER  &lt 2 BACKSPACE  &kp BACKSPACE  &kp LEFT_CONTROL  &caps_word
            >;
        };

        fun_layer {
            display-name = "fun";
            bindings = <
&studio_unlock   &none              &none   &none     &none   &none                      &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &soft_off  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
&kp PRINTSCREEN  &kp LC(Y)          &kp F7  &kp F8    &kp F9  &kp F10                    &kp DOT     &kp DOT       &kp DOT       &kp DOT    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI
&kp LSHFT        &kp LC(BACKSPACE)  &kp F4  &kp F5    &kp F6  &kp F11                    &kp DOT     &kp DOT       &kp DOT       &kp DOT    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI
&kp LCTRL        &kp LC(Z)          &kp F1  &kp F2    &kp F3  &kp F12  &trans    &trans  &kp DOT     &kp DOT       &kp DOT       &kp DOT    &kp DOT          &kp LCTRL
                                    &none   &kp LALT  &none   &trans   &trans    &trans  &trans      &kp DOT       &kp LEFT_ALT  &kp DOT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };
    };
};
